openapi: 3.0.2

info:
  title: Tinkoff Investments tracking API
  description: Tracking API
  version: 0.1.0
  contact:
    name: noion

tags:
  - name: info
    description: Security info

paths:
  /contracts:
    get:
      tags:
        - info
      summary: getContracts
      description: Get registrated contracts
      operationId: getContracts
      #      security:
      #        - apiKey: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountList'
        401:
          description: Unauthorized error
        500:
          description: Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /calculate:
    get:
      tags:
        - info
      summary: getFinResByFigi
      description: Calculate finantial result by ticker
      parameters:
        #        add period
        - name: contractId
          description: Contract id
          in: query
          required: true
          schema:
            type: string
        - name: figi
          description: Figi
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calculation'
        401:
          description: Unauthorized error
        500:
          description: Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /allTradedFigis:
    get:
      tags:
        - info
      summary: getAllTradedFigis
      description: Get all figis that traded
      parameters:
        #        add period
        - name: contractId
          description: Contract id
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Figis'
        401:
          description: Unauthorized error
        500:
          description: Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /finRes:
    get:
      tags:
        - info
      summary: getFinantialResult
      description: Get finantial result for period
      parameters:
        - name: contractId
          description: Contract id
          in: query
          required: true
          schema:
            type: string
        - name: startDate
          description: Period start date
          in: query
          required: true
          schema:
            format: date
            type: string
        - name: endDate
          description: Period end date
          in: query
          required: true
          schema:
            format: date
            type: string
        - name: includeComission
          description: Include comissions in result calculation
          in: query
          required: false
          schema:
            type: boolean
            default: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinRes'
        401:
          description: Unauthorized error
        500:
          description: Service Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  #  TODO add auth to Tinkoff by sending apiKey
  #  securitySchemes:
  #    apiKey:
  #      type: apiKey
  #      in: header
  #      name: X-API-KEY
  schemas:
    AccountList:
      type: object
      description: Account list
      required:
        - brokerAccount
      properties:
        brokerAccount:
          type: array
          items:
            type: object
            properties:
              brokerAccountType:
                type: string
                enum: [ Brocker, Iis ]
                description: Brocker account type
              brokerAccountId:
                type: string
                description: contract number
    Calculation:
      type: object
      description: Calculation trade result
      properties:
        figi:
          type: string
          description: Figi
        finanshialResult:
          type: double
          description: Finantial result with brocker fee included
        brockerFee:
          type: double
          description: Brocker fee included
        currency:
          type: string
          description: Currency
    Figis:
      type: array
      description: Traded isins
      items:
        type: string
        description: figi
    FinRes:
      type: array
      description: Finantial result devide by currency
      items:
        type: object
        description: Finantial result
        properties:
          currency:
            type: string
            description: Currency
          sum:
            type: double
            description: Finantial result in currency of calculation
    ErrorResponse:
      type: object
      description: Error message
      required:
        - code
      properties:
        code:
          type: string
          description: Internal error code
        message:
          type: string
          description: Error description